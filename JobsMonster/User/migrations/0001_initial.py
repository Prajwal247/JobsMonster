# Generated by Django 3.1.5 on 2021-02-06 04:19

import User.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.CharField(max_length=50, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=50, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last_name')),
                ('is_active', models.BooleanField(default=True, help_text='must be active if false the user is deleted', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('Specialization', models.CharField(choices=[('Recruiter', 'Recruiter'), ('Agriculture,Food and Natural Resources', 'Agriculture,Food and Natural Resources'), ('Architecture and Construction', 'Architecture and Construction'), ('Technology and Communications', 'Technology and Communications'), ('Business Management and Administration', 'Business Management and Administration'), ('Education and Training', 'Education and Training'), ('Finance', 'Finance'), ('Government and Public Administration', 'Government and Public Administration'), ('Health Science', 'Health Science'), ('Hospitality and Tourism', 'Hospitality and Tourism'), ('Human Service', 'Humanservice'), ('Information Technology', 'Information Technology'), ('Law and Pulblic Safety', 'Law and Pulblic Safety'), ('Manufacturing', 'Manufacturing'), ('Sales and Marketing', 'Sales and Marketing'), ('Engineering and Mathematics', 'Engineering and Mathematics'), ('Transportation', 'Transportation')], max_length=100)),
                ('Skills', models.TextField()),
                ('work_experience', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('BioData', models.FileField(upload_to='biodata/')),
                ('currently_employed', models.CharField(max_length=100)),
                ('date_joined', models.DateField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('DOB', models.CharField(max_length=20)),
                ('Nationality', models.CharField(max_length=20)),
                ('Gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=20)),
                ('pay_rate', models.FloatField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', User.models.UserManager()),
            ],
        ),
    ]
